[{"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/index.js":"1","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/App.js":"2","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Router.js":"3","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/FoodList.js":"4","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Ingredients.js":"5","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/actions/recipes.js":"6","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/state/store.js":"7","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/reducers/index.js":"8","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/reducers/recipes.js":"9","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Specials.js":"10","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/actions/specials.js":"11","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/reducers/specials.js":"12","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/actions/index.js":"13","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Directions.js":"14","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/FoodForm1.js":"15","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/AddRecipeModal.js":"16","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/EditRecipeModal.js":"17","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/EditIngredientModal.js":"18","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/AddIngredientModal.js":"19","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/AddDirectionModal.js":"20","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/EditDirectionModal.js":"21"},{"size":159,"mtime":1612281424610,"results":"22","hashOfConfig":"23"},{"size":7797,"mtime":1612390690744,"results":"24","hashOfConfig":"23"},{"size":739,"mtime":1612390180704,"results":"25","hashOfConfig":"23"},{"size":9988,"mtime":1611084874803,"results":"26","hashOfConfig":"23"},{"size":4856,"mtime":1612390145417,"results":"27","hashOfConfig":"23"},{"size":2771,"mtime":1612381259259,"results":"28","hashOfConfig":"23"},{"size":330,"mtime":1610961692063,"results":"29","hashOfConfig":"23"},{"size":276,"mtime":1611056878103,"results":"30","hashOfConfig":"23"},{"size":1816,"mtime":1612388581472,"results":"31","hashOfConfig":"23"},{"size":3874,"mtime":1612386553304,"results":"32","hashOfConfig":"23"},{"size":390,"mtime":1611056718613,"results":"33","hashOfConfig":"23"},{"size":440,"mtime":1612152894372,"results":"34","hashOfConfig":"23"},{"size":282,"mtime":1611064359530,"results":"35","hashOfConfig":"23"},{"size":5411,"mtime":1612390099583,"results":"36","hashOfConfig":"23"},{"size":9846,"mtime":1612284096423,"results":"37","hashOfConfig":"23"},{"size":10119,"mtime":1612389198310,"results":"38","hashOfConfig":"23"},{"size":5636,"mtime":1612390830088,"results":"39","hashOfConfig":"23"},{"size":3693,"mtime":1612387237276,"results":"40","hashOfConfig":"23"},{"size":3009,"mtime":1612388337150,"results":"41","hashOfConfig":"23"},{"size":3639,"mtime":1612388575877,"results":"42","hashOfConfig":"23"},{"size":4031,"mtime":1612388623331,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"17756qo",{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/index.js",[],["89","90"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/App.js",["91","92","93","94","95","96","97","98"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Router.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/FoodList.js",["99","100"],"import \"./../style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nimport { Formik, Field, Form } from \"formik\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getRecipes,\n  updateRecipe,\n  saveCurrentRecipe,\n} from \"../actions/recipes\";\nimport moment from \"moment\";\n\nconst CloseModalButton = styled.button`\n  position: \"absolute\";\n  left: 4px;\n  top: 4px;\n`;\n\nconst SubmitEditButton = styled.button`\n  position: \"absolute\";\n  margin-left: 450px;\n  margin-top: 15px;\n`;\n\nconst Labels = styled.span`\n  font-weight: 700;\n  margin-left: 5px;\n`;\nconst Button = styled.button`\n  width: 120px;\n`;\n\nfunction FoodList() {\n  const history = useHistory();\n  const recipes = useSelector((state) => state.recipes);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [selectedFoodItem, setSelectedFoodItem] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //get recipes for state\n    dispatch(getRecipes());\n  }, []);\n\n  //set selected for item to edit to state\n  function openModal(foodItem) {\n    setIsOpen(true);\n    setSelectedFoodItem(foodItem);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n\n  //after open modal edit recipe and dispatch it to redux state\n  function editItem(form) {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    //new recipe with form data\n    const newRecipe = {\n      uuid: selectedFoodItem.uuid,\n      title: form.title,\n      description: form.description,\n      servings: form.servings,\n      prepTime: form.prepTime,\n      cookTime: form.cookTime,\n      editDate: dateAndTime,\n      images: selectedFoodItem.images,\n      directions: selectedFoodItem.directions,\n      ingredients: selectedFoodItem.ingredients,\n    };\n\n    //dipatch recipe to update\n    dispatch(updateRecipe(newRecipe));\n    dispatch(saveCurrentRecipe());\n\n    closeModal();\n  }\n\n  function viewDirections(foodItem) {\n    history.push({\n      pathname: `/directions/${foodItem.uuid}`,\n    });\n  }\n\n  function viewIngredients(foodItem) {\n    history.push({\n      pathname: `/ingredients/${foodItem.uuid}`,\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          ariaHideApp={false}\n        >\n          <CloseModalButton className=\"btn btn-secondary\" onClick={closeModal}>\n            X\n          </CloseModalButton>\n          <div className=\"modal-form\">\n            <h2>Edit the food item</h2>\n\n            <Formik\n              enableReinitialize\n              initialValues={{\n                title: selectedFoodItem.title,\n                description: selectedFoodItem.description,\n                servings: selectedFoodItem.servings,\n                prepTime: selectedFoodItem.prepTime,\n                cookTime: selectedFoodItem.cookTime,\n              }}\n              onSubmit={editItem}\n            >\n              {(formikProps) => (\n                <Form>\n                  <div>\n                    <div className=\"modal-food-name\">\n                      <label className=\"form-label\">Name</label>\n                      <Field\n                        name=\"title\"\n                        type=\"text\"\n                        className=\"text-input\"\n                        placeholder=\"Enter a name\"\n                      />\n                      <br />\n                    </div>\n\n                    <div className=\"modal-food-description\">\n                      <label className=\"form-label\">Description</label>\n                      <Field\n                        name=\"description\"\n                        type=\"text\"\n                        placeholder=\"Enter a description\"\n                        className=\"text-input\"\n                      />\n                    </div>\n                  </div>\n                  <br />\n                  <div>\n                    <div className=\"modal-food-servings\">\n                      <label className=\"form-label\">Servings</label>\n\n                      <Field name=\"servings\">\n                        {({ field, form, meta }) => (\n                          <span>\n                            <input\n                              {...field}\n                              type=\"number\"\n                              className=\"number-input\"\n                            />\n                          </span>\n                        )}\n                      </Field>\n                    </div>\n                    <br />\n\n                    <div className=\"modal-preptime-cooktime-container\">\n                      <div className=\"modal-food-prepTime\">\n                        <label className=\"form-label\">\n                          Prep Time (in mins)\n                        </label>\n                        <Field name=\"prepTime\">\n                          {({ field, form, meta }) => (\n                            <span>\n                              <input\n                                {...field}\n                                type=\"number\"\n                                className=\"number-input\"\n                              />\n                            </span>\n                          )}\n                        </Field>\n                      </div>\n\n                      <div className=\"modal-food-cookTime\">\n                        <label className=\"form-label\">\n                          Cook time (in mins)\n                        </label>\n                        <Field name=\"cookTime\" type=\"number\">\n                          {({ field, form, meta }) => (\n                            <span>\n                              <input\n                                {...field}\n                                type=\"number\"\n                                className=\"number-input\"\n                              />\n                            </span>\n                          )}\n                        </Field>\n                      </div>\n                    </div>\n                  </div>\n                  <SubmitEditButton className=\"btn btn-primary\" type=\"submit\">\n                    Submit\n                  </SubmitEditButton>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Modal>\n        {recipes.recipesList &&\n          recipes.recipesList.map((item, index) => (\n            <div key={index} className=\"food-card\">\n              <div className=\"food-card-content\">\n                {item.images != undefined ? (\n                  <div className=\"food-list-image-container\">\n                    <img\n                      className=\"food-list-image\"\n                      src={item.images.small}\n                      alt=\"Sorry something went wrong\"\n                      height={100}\n                      width={150}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"food-list-image-container\">\n                    <img\n                      className=\"food-list-image\"\n                      src=\"https://images.squarespace-cdn.com/content/v1/55ece940e4b048d1ed401c11/1450136257542-4DATU4KRB70MDENGJXJX/ke17ZwdGBToddI8pDm48kAf-OpKpNsh_OjjU8JOdDKBZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpwkCFOLgzJj4yIx-vIIEbyWWRd0QUGL6lY_wBICnBy59Ye9GKQq6_hlXZJyaybXpCc/X%3A++The+Unknown\"\n                      alt=\"Sorry something went wrong\"\n                      height={100}\n                      width={150}\n                    />\n                  </div>\n                )}\n                <div className=\"food-list-description\">\n                  <div className=\"food-card-text\">\n                    <Labels>Name:</Labels> {item.title}{\" \"}\n                  </div>\n                  <div className=\"food-card-text\">\n                    <Labels>Description:</Labels> {item.description}\n                  </div>\n                  <div className=\"food-card-text\">\n                    <Labels>Serving:</Labels> {item.servings}\n                    <Labels>Prep Time: </Labels>\n                    {item.prepTime}\n                    <Labels>Cook time:</Labels> {item.cookTime}\n                  </div>\n                  <div className=\"food-card-text\">\n                    <Labels>Posted on: </Labels> {item.postDate}\n                  </div>\n                  <div className=\"food-card-text\">\n                    <Labels>Edited on: </Labels>\n                    <span>{item.editDate}</span>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <div className=\"row food-card-buttons\">\n                  <div style={{ marginRight: 5 }} className=\"col\">\n                    <Button\n                      className=\" btn btn-success\"\n                      onClick={() => openModal(item)}\n                    >\n                      Edit{\" \"}\n                    </Button>\n                  </div>\n                  <div className=\"button-move-left col\">\n                    <Button\n                      className=\" btn  btn-warning\"\n                      onClick={() => viewDirections(item)}\n                    >\n                      Directions\n                    </Button>\n                  </div>\n                  <div className=\"bottom-move-left col\">\n                    <Button\n                      className=\" btn  btn-dark\"\n                      onClick={() => viewIngredients(item)}\n                    >\n                      Ingredients\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default FoodList;\n","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Ingredients.js",["101","102","103","104"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/actions/recipes.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/state/store.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/reducers/index.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/reducers/recipes.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Specials.js",["105","106"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/actions/specials.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/reducers/specials.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/actions/index.js",[],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/Directions.js",["107"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/FoodForm1.js",["108","109"],"import { Formik, Field, Form } from \"formik\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { postNewRecipe } from \"../actions/recipes\";\nimport moment from \"moment\";\n\nconst Button = styled.button`\n  position: \"absolute\";\n  margin-left: 430px;\n  margin-top: 45px;\n`;\nconst IngredientButton = styled.button`\n  position: \"absolute\";\n  margin-left: 370px;\n  margin-top: 60px;\n`;\nconst InstructionButton = styled.button`\n  position: \"absolute\";\n  margin-left: 400px;\n`;\n\nconst Name = styled.div`\n  float: left;\n`;\nconst Description = styled.div`\n  float: right;\n  margin-right: 50px;\n`;\nconst Servings = styled.div`\n  float: left;\n  margin-top: 25px;\n  margin-left: -47px;\n`;\nconst PrepTime = styled.div`\n  float: left;\n  margin-left: 75px;\n`;\nconst CookTime = styled.div`\n  float: right;\n  margin-top: -26px;\n  margin-right: 25px;\n`;\nconst Amount = styled.div`\n  float: left;\n`;\nconst Measurement = styled.div`\n  float: right;\n  margin-right: 50px;\n`;\nconst IngredientName = styled.div`\n  position: absolute;\n  margin-top: 15px;\n`;\nconst Instruction = styled.div``;\nconst Optional = styled.div``;\nconst HrTagContainer = styled.div`\n  margin-top: 20px;\n`;\nconst PrepAndCookContainer = styled.div``;\n\nconst ServingsPrepAndCookContainer = styled.div``;\n\nfunction FoodForm() {\n  const [ingredients, setIngredients] = useState([]);\n  const [directions, setDriections] = useState([]);\n  const dispatch = useDispatch();\n\n  //form for submitting a new recipe\n  function addFoodItem(form) {\n    const date = moment().format(\"L\");\n    const time = moment().format(\"LTS\");\n    const dateAndTime = date + \" \" + time;\n\n    const newRecipe = {\n      uuid: uuidv4(),\n      title: form.title,\n      description: form.description,\n      servings: form.servings,\n      prepTime: form.prepTime,\n      ingredients: ingredients,\n      directions: directions,\n      postDate: dateAndTime,\n    };\n\n    dispatch(postNewRecipe(newRecipe));\n  }\n\n  //create ingredients for recipe\n  function addIngredient(data) {\n    let arr = ingredients;\n    data.uuid = uuidv4();\n    arr.push(data);\n    setIngredients(() => [...arr]);\n  }\n  //create directions for recipes\n  function addDirection(data) {\n    let arr = directions;\n    if (data.option === \"true\") {\n      data.option = \"yes\";\n    }\n    if (data.option === \"false\") {\n      data.option = \"no\";\n    }\n    arr.push(data);\n    setDriections(() => [...arr]);\n  }\n\n  //change option from true and false to yes and no\n  function changeOption(item) {\n    if (item === \"true\") {\n      return \"yes\";\n    }\n    if (item === \"false\") {\n      return \"no\";\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        <Formik enableReinitialize initialValues={{}} onSubmit={addFoodItem}>\n          {(formikProps) => (\n            <Form id=\"foodForm\">\n              <div>\n                <Name>\n                  <label className=\"form-label\">Name</label>\n                  <Field\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"text-input\"\n                    placeholder=\"Enter a name\"\n                    style={{ position: \"absolute\" }}\n                  />\n                  <br />\n                </Name>\n\n                <Description>\n                  <label className=\"form-label\">Description</label>\n                  <Field\n                    name=\"description\"\n                    type=\"text\"\n                    placeholder=\"Enter a description\"\n                    className=\"text-input\"\n                  />\n                </Description>\n              </div>\n              <br />\n              <div>\n                <ServingsPrepAndCookContainer>\n                  <Servings>\n                    <label className=\"form-label\">Servings</label>\n\n                    <Field name=\"servings\">\n                      {({ field, form, meta }) => (\n                        <span>\n                          <input\n                            {...field}\n                            type=\"number\"\n                            className=\"number-input\"\n                          />\n                        </span>\n                      )}\n                    </Field>\n                  </Servings>\n                  <br />\n                  <PrepAndCookContainer>\n                    <PrepTime>\n                      <label className=\"form-label\">Prep Time (in mins)</label>\n                      <Field name=\"prepTime\">\n                        {({ field, form, meta }) => (\n                          <span>\n                            <input\n                              {...field}\n                              type=\"number\"\n                              className=\"number-input\"\n                            />\n                          </span>\n                        )}\n                      </Field>\n                    </PrepTime>\n                    <br />\n                    <CookTime>\n                      <label className=\"form-label\">Cook time (in mins)</label>\n                      <Field name=\"cookTime\" type=\"number\">\n                        {({ field, form, meta }) => (\n                          <span>\n                            <input\n                              {...field}\n                              type=\"number\"\n                              className=\"number-input\"\n                            />\n                          </span>\n                        )}\n                      </Field>\n                    </CookTime>\n                  </PrepAndCookContainer>\n                </ServingsPrepAndCookContainer>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n      <HrTagContainer>\n        <hr />\n      </HrTagContainer>\n      <div className=\"modal-form\">\n        <h4>Ingredients</h4>\n        <Formik enableReinitialize initialValues={{}} onSubmit={addIngredient}>\n          {(formikProps) => (\n            <Form>\n              <Amount>\n                <label className=\"form-label\">Amount</label>\n                <Field\n                  name=\"amount\"\n                  type=\"number\"\n                  step={0.1}\n                  placeholder=\"How much?\"\n                  className=\"text-input\"\n                />\n              </Amount>\n              <Measurement>\n                <label className=\"form-label\">Measurement</label>\n                <Field name=\"measurement\" className=\"text-input-ingredients\">\n                  {({ field, form, meta }) => (\n                    <span>\n                      <input\n                        placeholder=\"Ex. teaspoon\"\n                        {...field}\n                        type=\"text\"\n                        className=\"text-input\"\n                      />\n                    </span>\n                  )}\n                </Field>\n              </Measurement>\n\n              <br />\n              <IngredientName>\n                <label className=\"form-label\">Name</label>\n                <Field name=\"name\" type=\"text\" className=\"text-input\">\n                  {({ field, form, meta }) => (\n                    <span>\n                      <input\n                        {...field}\n                        placeholder=\"Enter ingredient name\"\n                        type=\"text\"\n                        className=\"text-input\"\n                      />\n                    </span>\n                  )}\n                </Field>\n              </IngredientName>\n              <IngredientButton className=\"btn btn-secondary \" type=\"submit\">\n                Submit Ingredient\n              </IngredientButton>\n            </Form>\n          )}\n        </Formik>\n        <ul>\n          {ingredients.map((item, index) => (\n            <li key={index}>\n              <span className=\"bold-text\">Name:</span> {item.name}{\" \"}\n              <span className=\"bold-text\">Measurement:</span> {item.measurement}{\" \"}\n              <span className=\"bold-text\">Amount:</span> {item.amount}{\" \"}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <HrTagContainer>\n        <hr />\n      </HrTagContainer>\n\n      <div className=\"modal-form\">\n        <h4>Directions</h4>\n        <Formik enableReinitialize initialValues={{}} onSubmit={addDirection}>\n          {(formikProps) => (\n            <Form>\n              <Instruction>\n                <label className=\"form-label\">Instruction</label>\n                <Field\n                  name=\"instructions\"\n                  type=\"text\"\n                  rows=\"3\"\n                  maxLength=\"1000\"\n                  placeholder=\"Enter an instruction\"\n                  component=\"textarea\"\n                  className=\"textarea\"\n                />\n              </Instruction>\n              <Optional>\n                <label className=\"form-label\">Optional</label>\n                <Field name=\"optional\" component=\"select\">\n                  <option value=\"\">---Select if it is Optional ---</option>\n                  <option value=\"true\">Yes</option>\n                  <option value=\"false\">No</option>\n                </Field>\n              </Optional>\n\n              <InstructionButton className=\"btn btn-secondary\" type=\"submit\">\n                Add Instruction\n              </InstructionButton>\n            </Form>\n          )}\n        </Formik>\n        <ul>\n          {directions.map((item, index) => (\n            <li>\n              <span className=\"bold-text\">Instruction</span> {item.instructions}{\" \"}\n              <span className=\"bold-text\">Optional</span>{\" \"}\n              {changeOption(item.optional)}{\" \"}\n            </li>\n          ))}\n        </ul>\n        <HrTagContainer>\n          <hr />\n        </HrTagContainer>\n      </div>\n      <Button className=\"\" form=\"foodForm\" type=\"submit\">\n        Add Food{\" \"}\n      </Button>\n    </div>\n  );\n}\n\nexport default FoodForm;\n","/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/AddRecipeModal.js",["110","111"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/EditRecipeModal.js",["112","113"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/EditIngredientModal.js",["114","115"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/AddIngredientModal.js",["116","117"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/AddDirectionModal.js",["118","119"],"/Users/oladayoogundipe/Documents/frontend-api-skills-test/src/components/EditDirectionModal.js",["120","121","122"],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":23,"column":8,"nodeType":"129","messageId":"130","endLine":23,"endColumn":19},{"ruleId":"127","severity":1,"message":"131","line":24,"column":8,"nodeType":"129","messageId":"130","endLine":24,"endColumn":18},{"ruleId":"127","severity":1,"message":"132","line":27,"column":7,"nodeType":"129","messageId":"130","endLine":27,"endColumn":15},{"ruleId":"127","severity":1,"message":"133","line":90,"column":10,"nodeType":"129","messageId":"130","endLine":90,"endColumn":20},{"ruleId":"127","severity":1,"message":"134","line":90,"column":22,"nodeType":"129","messageId":"130","endLine":90,"endColumn":35},{"ruleId":"127","severity":1,"message":"135","line":91,"column":10,"nodeType":"129","messageId":"130","endLine":91,"endColumn":21},{"ruleId":"127","severity":1,"message":"136","line":91,"column":23,"nodeType":"129","messageId":"130","endLine":91,"endColumn":37},{"ruleId":"137","severity":1,"message":"138","line":118,"column":6,"nodeType":"139","endLine":118,"endColumn":8,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"138","line":45,"column":6,"nodeType":"139","endLine":45,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":224,"column":30,"nodeType":"144","messageId":"145","endLine":224,"endColumn":32},{"ruleId":"127","severity":1,"message":"146","line":1,"column":8,"nodeType":"129","messageId":"130","endLine":1,"endColumn":14},{"ruleId":"127","severity":1,"message":"147","line":22,"column":3,"nodeType":"129","messageId":"130","endLine":22,"endColumn":19},{"ruleId":"127","severity":1,"message":"148","line":23,"column":3,"nodeType":"129","messageId":"130","endLine":23,"endColumn":20},{"ruleId":"137","severity":1,"message":"149","line":64,"column":6,"nodeType":"139","endLine":64,"endColumn":8,"suggestions":"150"},{"ruleId":"127","severity":1,"message":"151","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":61,"column":6,"nodeType":"139","endLine":61,"endColumn":8,"suggestions":"152"},{"ruleId":"137","severity":1,"message":"149","line":78,"column":6,"nodeType":"139","endLine":78,"endColumn":8,"suggestions":"153"},{"ruleId":"127","severity":1,"message":"154","line":2,"column":27,"nodeType":"129","messageId":"130","endLine":2,"endColumn":36},{"ruleId":"127","severity":1,"message":"155","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":21},{"ruleId":"127","severity":1,"message":"154","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"155","line":17,"column":10,"nodeType":"129","messageId":"130","endLine":17,"endColumn":21},{"ruleId":"127","severity":1,"message":"146","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":14},{"ruleId":"127","severity":1,"message":"155","line":18,"column":10,"nodeType":"129","messageId":"130","endLine":18,"endColumn":21},{"ruleId":"127","severity":1,"message":"155","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":21},{"ruleId":"127","severity":1,"message":"156","line":88,"column":11,"nodeType":"129","messageId":"130","endLine":88,"endColumn":22},{"ruleId":"127","severity":1,"message":"154","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"155","line":11,"column":10,"nodeType":"129","messageId":"130","endLine":11,"endColumn":21},{"ruleId":"127","severity":1,"message":"154","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"155","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":21},{"ruleId":"127","severity":1,"message":"155","line":16,"column":10,"nodeType":"129","messageId":"130","endLine":16,"endColumn":21},{"ruleId":"137","severity":1,"message":"157","line":64,"column":5,"nodeType":"139","endLine":64,"endColumn":62,"suggestions":"158"},{"ruleId":"127","severity":1,"message":"156","line":87,"column":11,"nodeType":"129","messageId":"130","endLine":87,"endColumn":22},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'Ingredients' is defined but never used.","Identifier","unusedVar","'Directions' is defined but never used.","'BoldText' is assigned a value but never used.","'directions' is assigned a value but never used.","'setDirections' is assigned a value but never used.","'ingredients' is assigned a value but never used.","'setIngredients' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["161"],["162"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'styled' is defined but never used.","'updateIngredient' is defined but never used.","'saveCurrentRecipe' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'recipeId'. Either include them or remove the dependency array.",["163"],"'useState' is defined but never used.",["164"],["165"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'dateAndTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentDirection.instructions'. Either include it or remove the dependency array.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"170","fix":"171"},{"desc":"167","fix":"172"},{"desc":"170","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [dispatch]",{"range":"176","text":"177"},{"range":"178","text":"177"},"Update the dependencies array to be: [dispatch, recipeId]",{"range":"179","text":"180"},{"range":"181","text":"177"},{"range":"182","text":"180"},"Update the dependencies array to be: [currentDirection.instruction, currentDirection.instructions, currentDirection.optional]",{"range":"183","text":"184"},[2534,2536],"[dispatch]",[1085,1087],[1415,1417],"[dispatch, recipeId]",[1155,1157],[1680,1682],[1444,1501],"[currentDirection.instruction, currentDirection.instructions, currentDirection.optional]"]