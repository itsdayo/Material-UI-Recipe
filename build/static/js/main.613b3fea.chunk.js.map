{"version":3,"sources":["components/Ingredients.js","components/FoodList.js","components/FoodForm.js","App.js","components/Router.js","index.js"],"names":["CloseModalButton","styled","button","IngredientButton","Ingredients","props","useHistory","useState","allData","setAllData","modalIsOpen","setIsOpen","allIngredients","setAllIngredients","selectedIngredient","setSelectedIngredient","selectedFoodItem","setSelectedFoodItem","closeModal","useEffect","axios","get","then","res","data","catch","error","console","log","location","state","foodItem","ingredients","isOpen","onRequestClose","contentLabel","style","content","top","left","right","bottom","marginRight","transform","ariaHideApp","className","onClick","enableReinitialize","initialValues","amount","measurement","name","onSubmit","item","uuid","uuidv4","i","length","put","render","formikProps","position","float","type","step","placeholder","marginLeft","field","form","meta","postion","marginTop","map","index","fontWeight","ingredient","paddingBottom","newIngredient","arr","changedFoodItem","push","SubmitEditButton","FoodList","history","setAllSpecials","setFoodItem","viewDescription","title","description","servings","prepTime","cookTime","undefined","images","src","small","alt","height","width","postDate","editDate","openModal","pathname","viewIngredients","Button","InstructionButton","HrTagContainer","div","FoodForm","setIngredients","directions","setDriections","post","id","option","rows","maxLength","component","value","instruction","App","Fragment","Router","exact","path","document","querySelector"],"mappings":"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","file":"static/js/main.613b3fea.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style.css\";\nimport Modal from \"react-modal\";\nimport { Formik, Field, Form } from \"formik\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nconst CloseModalButton = styled.button`\n  position: \"absolute\";\n  left: 4px;\n  top: 4px;\n`;\nconst IngredientButton = styled.button`\n  position: \"absolute\";\n  margin-left: 400px;\n`;\nfunction Ingredients(props) {\n  const history = useHistory();\n  const [allData, setAllData] = useState([]);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [allIngredients, setAllIngredients] = useState([]);\n  const [selectedIngredient, setSelectedIngredient] = useState({});\n  const [selectedFoodItem, setSelectedFoodItem] = useState({});\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/recipes\")\n      .then((res) => {\n        setAllData(res.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n    setAllIngredients(props.location.state.foodItem.ingredients);\n  }, []);\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  function openModal(foodItem, ingredient) {\n    setIsOpen(true);\n    console.log(ingredient);\n    setSelectedIngredient(ingredient);\n    setSelectedFoodItem(foodItem);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  function handleSubmit(item) {\n    item.uuid = uuidv4();\n\n    let foodItem = selectedFoodItem;\n    let ingredients = selectedFoodItem.ingredients;\n\n    for (let i = 0; i <= ingredients.length - 1; i++) {\n      if (ingredients[i].uuid === selectedIngredient.uuid) {\n        ingredients[i] = item;\n        break;\n      }\n    }\n    foodItem.ingredients = ingredients;\n    console.log(foodItem.uuid);\n    axios\n      .put(`http://localhost:3001/recipes/${foodItem.uuid}`, foodItem)\n      .then(() => setIsOpen(false));\n  }\n\n  function addIngredient(item) {\n    let newIngredient = item;\n    newIngredient.uuid = uuidv4();\n    console.log(newIngredient);\n    let arr = allData;\n\n    let changedFoodItem = {};\n    console.log(props);\n\n    for (let i = 0; i <= arr.length - 1; i++) {\n      if (arr[i].uuid === props.location.state.foodItem.uuid) {\n        arr[i].ingredients.push(newIngredient);\n        changedFoodItem = arr[i];\n      }\n    }\n    console.log(changedFoodItem);\n    console.log(arr);\n    axios\n      .put(\n        `http://localhost:3001/recipes/${props.location.state.foodItem.uuid}`,\n        changedFoodItem\n      )\n      .then()\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n    setAllIngredients(() => [...changedFoodItem.ingredients]);\n  }\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        contentLabel=\"Example Modal\"\n        style={customStyles}\n        ariaHideApp={false}\n      >\n        <CloseModalButton className=\"btn btn-secondary\" onClick={closeModal}>\n          X\n        </CloseModalButton>\n        <div className=\"ingredient-form\">\n          <h4>Ingredient</h4>\n          <Formik\n            enableReinitialize\n            initialValues={{\n              amount: selectedIngredient.amount,\n              measurement: selectedIngredient.measurement,\n              name: selectedIngredient.name,\n            }}\n            onSubmit={handleSubmit}\n            render={(formikProps) => (\n              <Form>\n                <div style={{ position: \"absolute\", float: \"left\" }}>\n                  <label className=\"form-label\">Amount</label>\n                  <Field\n                    name=\"amount\"\n                    type=\"number\"\n                    step={0.1}\n                    placeholder=\"How much?\"\n                    className=\"text-input\"\n                  />\n                </div>\n                <div style={{ marginLeft: 250 }}>\n                  <label className=\"form-label\">Measurement</label>\n                  <Field name=\"measurement\" className=\"text-input-ingredients\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          placeholder=\"Ex. teaspoon\"\n                          {...field}\n                          type=\"text\"\n                          className=\"text-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <div style={{ postion: \"absolute\", marginTop: 15 }}>\n                  <label className=\"form-label\">Name</label>\n                  <Field name=\"name\" type=\"text\" className=\"text-input\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          placeholder=\"Enter ingredient name\"\n                          type=\"text\"\n                          className=\"text-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <IngredientButton className=\"btn btn-primary\" type=\"submit\">\n                  Submit Ingredient\n                </IngredientButton>\n              </Form>\n            )}\n          />\n        </div>\n      </Modal>\n\n      <div className=\"ingredients-container\">\n        <h1 className=\"ingredients-header\">Ingredients </h1>\n        <div style={{ marginTop: 15 }}>\n          <ul>\n            {allIngredients.map((item, index) => (\n              <li style={{ marginTop: 15 }} key={index}>\n                <span style={{ fontWeight: \"bold\" }}>Name:</span>\n                {item.name}{\" \"}\n                <span style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n                  Measurement:\n                </span>\n                {item.measurement}{\" \"}\n                <span style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n                  Amount:\n                </span>\n                {item.amount}\n                <button\n                  onClick={() => openModal(props.location.state.foodItem, item)}\n                  style={{ marginLeft: 5 }}\n                >\n                  Edit\n                </button>\n              </li>\n            ))}\n          </ul>\n          <div style={{ marginLeft: 30, paddingBottom: 30 }}>\n            <Formik\n              enableReinitialize\n              initialValues={{}}\n              onSubmit={addIngredient}\n            >\n              {(formikProps) => (\n                <Form>\n                  <div style={{ position: \"absolute\", float: \"left\" }}>\n                    <label className=\"form-label\">Amount</label>\n                    <Field\n                      name=\"amount\"\n                      type=\"number\"\n                      step={0.1}\n                      placeholder=\"How much?\"\n                      className=\"text-input\"\n                    />\n                  </div>\n                  <div style={{ marginLeft: 250 }}>\n                    <label className=\"form-label\">Measurement</label>\n                    <Field\n                      name=\"measurement\"\n                      className=\"text-input-ingredients\"\n                    >\n                      {({ field, form, meta }) => (\n                        <span>\n                          <input\n                            placeholder=\"Ex. teaspoon\"\n                            {...field}\n                            type=\"text\"\n                            className=\"text-input\"\n                          />\n                        </span>\n                      )}\n                    </Field>\n                  </div>\n                  <div\n                    style={{\n                      float: \"left\",\n                      postion: \"absolute\",\n                      marginTop: 15,\n                    }}\n                  >\n                    <label className=\"form-label\">Name</label>\n                    <Field name=\"name\" type=\"text\" className=\"text-input\">\n                      {({ field, form, meta }) => (\n                        <span>\n                          <input\n                            {...field}\n                            placeholder=\"Enter ingredient name\"\n                            type=\"text\"\n                            className=\"text-input\"\n                          />\n                        </span>\n                      )}\n                    </Field>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    style={{ marginTop: 15, marginLeft: 20 }}\n                    className=\"btn btn-warning\"\n                  >\n                    Add Ingredient\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          </div>\n          {/* <button\n          className=\"btn btn-warning\"\n          style={{ position: \"relative\", marginBottom: 5, marginLeft: 400 }}\n        >\n          Add an ingredient\n        </button> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import \"./../style.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport styled from \"styled-components\";\nimport { Formik, Field, Form } from \"formik\";\n\nconst CloseModalButton = styled.button`\n  position: \"absolute\";\n  left: 4px;\n  top: 4px;\n`;\nconst SubmitEditButton = styled.button`\n  position: \"absolute\";\n  margin-left: 250px;\n\n  background-color: gold;\n`;\nfunction FoodList(props) {\n  const history = useHistory();\n  const [allData, setAllData] = useState([]);\n  const [allSpecials, setAllSpecials] = useState([]);\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [foodItem, setFoodItem] = useState({});\n  const [formList, setFormList] = useState([]);\n\n  useEffect(() => {\n    // retrieving data from the recipe  api\n    axios\n      .get(\"http://localhost:3001/recipes\")\n      .then((res) => {\n        setAllData(res.data);\n        console.log(res.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n    axios\n      .get(\"http://localhost:3001/specials\")\n      .then((res) => {\n        setAllSpecials(res.data);\n        console.log(res.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }, []);\n\n  function openModal(foodItem) {\n    setIsOpen(true);\n    setFoodItem(foodItem);\n    console.log(foodItem);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const customStyles = {\n    content: {\n      top: \"50%\",\n      left: \"50%\",\n      right: \"auto\",\n      bottom: \"auto\",\n      marginRight: \"-50%\",\n      transform: \"translate(-50%, -50%)\",\n    },\n  };\n  function editItem() {\n    history.push(\"/ingredients\");\n  }\n  function viewDescription() {}\n  function viewIngredients(foodItem) {\n    history.push({\n      pathname: \"/ingredients\",\n      state: { foodItem: foodItem },\n    });\n  }\n  function addIngredient() {}\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        ariaHideApp={false}\n      >\n        <CloseModalButton className=\"btn btn-secondary\" onClick={closeModal}>\n          X\n        </CloseModalButton>\n\n        <h2>Edit the food item</h2>\n\n        <Formik\n          enableReinitialize\n          initialValues={{\n            title: foodItem.title,\n            description: foodItem.description,\n            servings: foodItem.servings,\n            prepTime: foodItem.prepTime,\n            cookTime: foodItem.cookTime,\n          }}\n          // onSubmit={addDirection}\n          render={(formikProps) => (\n            <Form>\n              <div style={{ float: \"left\" }}>\n                <label className=\"form-label\">Name</label>\n                <Field\n                  name=\"title\"\n                  type=\"text\"\n                  className=\"text-input\"\n                  placeholder=\"Enter a name\"\n                  style={{ position: \"absolute\" }}\n                />\n                <br />\n              </div>\n              <div\n                style={{ position: \"absolute\", marginLeft: 270, marginTop: -2 }}\n              >\n                <label className=\"form-label\">Description</label>\n                <Field\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Enter a description\"\n                  className=\"text-input\"\n                />\n              </div>\n              <br />\n              <div>\n                <div\n                  className=\"servings\"\n                  style={{ position: \"absolute\", marginTop: 19 }}\n                >\n                  <label className=\"form-label\">Servings</label>\n\n                  <Field name=\"servings\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          type=\"number\"\n                          className=\"number-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <br />\n                <div\n                  style={{\n                    position: \"absolute\",\n                    float: \"right\",\n                    marginLeft: 160,\n                  }}\n                >\n                  <label className=\"form-label\">Prep Time (in mins)</label>\n                  <Field name=\"prepTime\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          type=\"number\"\n                          className=\"number-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <div\n                  style={{\n                    marginLeft: 370,\n                    marginTop: -1,\n                  }}\n                >\n                  <label className=\"form-label\">Cook time (in mins)</label>\n                  <Field name=\"cookTime\" type=\"number\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          type=\"number\"\n                          className=\"number-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n              </div>\n\n              <SubmitEditButton type=\"submit\">Add Instruction</SubmitEditButton>\n            </Form>\n          )}\n        />\n        <div>\n          <h4>Ingredients</h4>\n          <Formik\n            enableReinitialize\n            initialValues={{}}\n            onSubmit={addIngredient}\n            render={(formikProps) => (\n              <Form>\n                <div style={{ position: \"absolute\", float: \"left\" }}>\n                  <label className=\"form-label\">Amount</label>\n                  <Field\n                    name=\"amount\"\n                    type=\"text\"\n                    placeholder=\"How much? Ex. 1 cup\"\n                    className=\"text-input\"\n                  />\n                </div>\n                <div style={{ marginLeft: 250 }}>\n                  <label className=\"form-label\">Measurement</label>\n                  <Field name=\"measurement\" className=\"text-input-ingredients\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          placeholder=\"Ex. teaspoon\"\n                          {...field}\n                          type=\"text\"\n                          className=\"text-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <div style={{ postion: \"absolute\", marginTop: 15 }}>\n                  <label className=\"form-label\">Name</label>\n                  <Field name=\"name\" type=\"text\" className=\"text-input\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          placeholder=\"Enter ingredient name\"\n                          type=\"text\"\n                          className=\"text-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <button type=\"submit\">Add Ingredient</button>\n              </Form>\n            )}\n          />\n\n          {/* {formList.map(function (input, index) {\n            return { input };\n          })} */}\n        </div>\n      </Modal>\n      {allData.map((item, index) => (\n        <div key={index} className=\"food-card\">\n          <div className=\"food-card-content\">\n            {item.images != undefined ? (\n              <img\n                className=\"food-list-image\"\n                src={item.images.small}\n                alt=\"Sorry something went wrong\"\n                height={100}\n                width={150}\n              />\n            ) : (\n              <img\n                className=\"food-list-image\"\n                src=\"https://images.squarespace-cdn.com/content/v1/55ece940e4b048d1ed401c11/1450136257542-4DATU4KRB70MDENGJXJX/ke17ZwdGBToddI8pDm48kAf-OpKpNsh_OjjU8JOdDKBZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZUJFbgE-7XRK3dMEBRBhUpwkCFOLgzJj4yIx-vIIEbyWWRd0QUGL6lY_wBICnBy59Ye9GKQq6_hlXZJyaybXpCc/X%3A++The+Unknown\"\n                // alt=\"Sorry something went wrong\"\n                height={100}\n                width={150}\n              />\n            )}\n            <div className=\"food-list-description\">\n              <div className=\"food-card-text\">\n                <span style={{ fontWeight: \"bold\" }}>Name:</span> {item.title}{\" \"}\n              </div>\n              <div className=\"food-card-text\">\n                <span style={{ fontWeight: \"bold\" }}>Description:</span>{\" \"}\n                {item.description}\n              </div>\n              <div className=\"food-card-text\">\n                <span style={{ fontWeight: \"bold\" }}>Serving:</span>{\" \"}\n                {item.servings}\n                <span style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n                  Prep Time:\n                </span>\n                <span style={{ marginLeft: 2 }}> {item.prepTime} </span>\n                <span style={{ fontWeight: \"bold\", marginLeft: 5 }}>\n                  Cook time:\n                </span>{\" \"}\n                {item.cookTime}\n              </div>\n              <div className=\"food-card-text\">\n                <span style={{ fontWeight: \"bold\" }}>Posted on:</span>{\" \"}\n                {item.postDate}\n              </div>\n              <div className=\"food-card-text\">\n                <span style={{ fontWeight: \"bold\" }}>Edited on:</span>\n                <span style={{ marginLeft: 3 }}>{item.editDate}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"food-card-buttons\">\n            <button\n              style={{}}\n              className=\"btn btn-success\"\n              onClick={() => openModal(item)}\n            >\n              Edit{\" \"}\n            </button>\n            <button\n              style={{ marginLeft: 10 }}\n              className=\" btn btn-warning\"\n              onClick={viewDescription}\n            >\n              View Directions\n            </button>\n            <button\n              style={{ marginLeft: 10, position: \"absolute\", float: \"left\" }}\n              className=\"btn btn-dark\"\n              onClick={() => viewIngredients(item)}\n            >\n              {\" \"}\n              View Ingredients\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default FoodList;\n","import { Formik, Field, Form } from \"formik\";\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nconst Button = styled.button`\n  position: \"absolute\";\n  margin-left: 430px;\n  margin-top: 40px;\n`;\nconst IngredientButton = styled.button`\n  position: \"absolute\";\n  margin-left: 400px;\n`;\nconst InstructionButton = styled.button`\n  position: \"absolute\";\n  margin-left: 400px;\n`;\n\nconst HrTagContainer = styled.div`\n  margin-top: 20px;\n`;\n\nfunction FoodForm() {\n  const [ingredients, setIngredients] = useState([]);\n  const [directions, setDriections] = useState([]);\n  const history = useHistory();\n  function addFoodItem(data) {\n    let arr = data;\n    arr.ingredients = ingredients;\n    arr.directions = directions;\n    axios\n      .post(`http://localhost:3001/recipes`, arr)\n      .then((res) => {\n        history.push(\"/\");\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }\n  function addIngredient(data) {\n    let arr = ingredients;\n    data.uuid = uuidv4();\n    arr.push(data);\n    setIngredients(() => [...arr]);\n    console.log(ingredients);\n  }\n  function addDirection(data) {\n    let arr = directions;\n    if (data.option === \"true\") {\n      data.option = \"Yes\";\n    }\n    if (data.option === \"false\") {\n      data.option = \"No\";\n    }\n    arr.push(data);\n    setDriections(() => [...arr]);\n  }\n  return (\n    <div>\n      <div>\n        <Formik\n          enableReinitialize\n          initialValues={{}}\n          onSubmit={addFoodItem}\n          render={(formikProps) => (\n            <Form id=\"foodForm\">\n              <div style={{ float: \"left\" }}>\n                <label className=\"form-label\">Name</label>\n                <Field\n                  name=\"title\"\n                  type=\"text\"\n                  className=\"text-input\"\n                  placeholder=\"Enter a name\"\n                  style={{ position: \"absolute\" }}\n                />\n                <br />\n              </div>\n              <div\n                style={{ position: \"absolute\", marginLeft: 270, marginTop: -2 }}\n              >\n                <label className=\"form-label\">Description</label>\n                <Field\n                  name=\"description\"\n                  type=\"text\"\n                  placeholder=\"Enter a description\"\n                  className=\"text-input\"\n                />\n              </div>\n              <br />\n              <div>\n                <div\n                  className=\"servings\"\n                  style={{ position: \"absolute\", marginTop: 19 }}\n                >\n                  <label className=\"form-label\">Servings</label>\n\n                  <Field name=\"servings\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          type=\"number\"\n                          className=\"number-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <br />\n                <div\n                  style={{\n                    position: \"absolute\",\n\n                    marginLeft: 270,\n                  }}\n                >\n                  <label className=\"form-label\">Prep Time (in mins)</label>\n                  <Field name=\"prepTime\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          type=\"number\"\n                          className=\"number-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n                <br />\n                <div style={{ marginTop: 15 }}>\n                  <label className=\"form-label\">Cook time (in mins)</label>\n                  <Field name=\"cookTime\" type=\"number\">\n                    {({ field, form, meta }) => (\n                      <span>\n                        <input\n                          {...field}\n                          type=\"number\"\n                          className=\"number-input\"\n                        />\n                      </span>\n                    )}\n                  </Field>\n                </div>\n              </div>\n            </Form>\n          )}\n        />\n      </div>\n      <HrTagContainer>\n        <hr />\n      </HrTagContainer>\n      <div className=\"ingredient-form\">\n        <h4>Ingredients</h4>\n        <Formik\n          enableReinitialize\n          initialValues={{}}\n          onSubmit={addIngredient}\n          render={(formikProps) => (\n            <Form>\n              <div style={{ position: \"absolute\", float: \"left\" }}>\n                <label className=\"form-label\">Amount</label>\n                <Field\n                  name=\"amount\"\n                  type=\"number\"\n                  step={0.1}\n                  placeholder=\"How much?\"\n                  className=\"text-input\"\n                />\n              </div>\n              <div style={{ marginLeft: 250 }}>\n                <label className=\"form-label\">Measurement</label>\n                <Field name=\"measurement\" className=\"text-input-ingredients\">\n                  {({ field, form, meta }) => (\n                    <span>\n                      <input\n                        placeholder=\"Ex. teaspoon\"\n                        {...field}\n                        type=\"text\"\n                        className=\"text-input\"\n                      />\n                    </span>\n                  )}\n                </Field>\n              </div>\n              <div style={{ postion: \"absolute\", marginTop: 15 }}>\n                <label className=\"form-label\">Name</label>\n                <Field name=\"name\" type=\"text\" className=\"text-input\">\n                  {({ field, form, meta }) => (\n                    <span>\n                      <input\n                        {...field}\n                        placeholder=\"Enter ingredient name\"\n                        type=\"text\"\n                        className=\"text-input\"\n                      />\n                    </span>\n                  )}\n                </Field>\n              </div>\n              <IngredientButton className=\"btn btn-secondary \" type=\"submit\">\n                Submit Ingredient\n              </IngredientButton>\n            </Form>\n          )}\n        />\n        <ul>\n          {ingredients.map((item, index) => (\n            <li key={index}>\n              <span style={{ fontWeight: \"bold\" }}>Name:</span> {item.name}{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>Measurement:</span>{\" \"}\n              {item.measurement}{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>Amount:</span> {item.amount}{\" \"}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <HrTagContainer>\n        <hr />\n      </HrTagContainer>\n\n      <div className=\"directions-form\">\n        <h4>Directions</h4>\n        <Formik\n          enableReinitialize\n          initialValues={{}}\n          onSubmit={addDirection}\n          render={(formikProps) => (\n            <Form>\n              <div>\n                <label style={{ bottom: 5 }} className=\"form-label\">\n                  Instruction\n                </label>\n                <Field\n                  name=\"instruction\"\n                  type=\"text\"\n                  rows=\"3\"\n                  maxLength=\"1000\"\n                  placeholder=\"Enter an instruction\"\n                  component=\"textarea\"\n                  className=\"textarea\"\n                />\n              </div>\n              <div style={{ marginTop: 15 }}>\n                <label className=\"form-label\">Optional</label>\n                <Field name=\"option\" component=\"select\">\n                  <option value=\"\">---Select if it is Optional ---</option>\n                  <option value=\"true\">Yes</option>\n                  <option value=\"false\">No</option>\n                </Field>\n              </div>\n\n              <InstructionButton className=\"btn btn-secondary\" type=\"submit\">\n                Add Instruction\n              </InstructionButton>\n            </Form>\n          )}\n        />\n        <ul>\n          {directions.map((item, index) => (\n            <li>\n              <span style={{ fontWeight: \"bold\" }}>Instruction</span>{\" \"}\n              {item.instruction}{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>Optional</span> {item.option}{\" \"}\n            </li>\n          ))}\n        </ul>\n        <HrTagContainer>\n          <hr />\n        </HrTagContainer>\n      </div>\n      <Button className=\"btn btn-primary\" form=\"foodForm\" type=\"submit\">\n        Add Food{\" \"}\n      </Button>\n    </div>\n  );\n}\n\nexport default FoodForm;\n","import React from \"react\";\nimport \"./style.css\";\nimport FoodList from \"./components/FoodList\";\nimport FoodForm from \"./components/FoodForm\";\nimport styled from \"styled-components\";\nconst Button = styled.button`\n  margin-top: 10px;\n  margin-left: 5px;\n`;\nfunction App() {\n  return (\n    <React.Fragment>\n      <Button className=\"btn btn-info\">View the specials </Button>\n      <br />\n      <div style={{ marginTop: 5 }}>\n        <div className=\"food-list\">\n          <div className=\"food-list-content\">\n            <FoodList />\n          </div>\n        </div>\n        <div className=\"food-form\">\n          <div className=\"food-form-content\">\n            <FoodForm />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Ingredients from \"./Ingredients\";\nimport App from \"./../App\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/ingredients\" component={Ingredients} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\n\nrender(<Router />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}